var searchIndex = JSON.parse('{\
"covid19_vaccine_model":{"doc":"","i":[[0,"vaccination_model","covid19_vaccine_model","The module implementing everything from the model and the…",null,null],[3,"Model","covid19_vaccine_model::vaccination_model","A collection of global parameters (especially the…",null,null],[12,"age_groups","","A vector of all the age groups",0,null],[12,"M","","Total population size",0,null],[12,"eta0","","~Infection blocking potential of the vaccine ($\\\\eta_0$ in…",0,null],[12,"kappa0","","~Vaccine efficacy against severe infections ($\\\\kappa_0$ in…",0,null],[12,"tau","","Time between vaccination and developed immunization (time…",0,null],[12,"tau_vacc","","Time between two vaccination doses",0,null],[12,"vaccinations_per_week_dose1","","In week j, age group i gets…",0,null],[12,"vaccinations_per_week_dose2","","In week j, age group i gets…",0,null],[12,"random_vacc","","Fraction of vaccines to distribute randomly across the…",0,null],[12,"N_TTI","","Limit of daily infections above which the tracing of…",0,null],[12,"N_test_eff","","Limit of daily infections above which effective testing…",0,null],[12,"N_test_ineff","","Limit of daily infections above which ineffective testing…",0,null],[12,"N_no_test","","Limit of daily infections above which essentially no…",0,null],[3,"AgeGroup","","A collection of all the parameters for a given age group",null,null],[12,"name","","Name of the age group (will be used as the name of the…",1,null],[12,"M","","Age group population size ($M_i$ in the manuscript)",1,null],[12,"influx","","Daily influx ($\\\\phi_i$ in the manuscript)",1,null],[12,"rho","","E-to-I rate $\\\\rho$ (~1/latent period)",1,null],[12,"gamma_I","","Recovery rates in the I compartment (array indices:…",1,null],[12,"gamma_ICU","","Recovery rates in the ICU compartment (array indices:…",1,null],[12,"alpha","","I-to-ICU rate (array indices: vaccination status,…",1,null],[12,"delta_I","","Fatality rates in the I compartment (array indices:…",1,null],[12,"delta_ICU","","Fatality rates in the ICU compartment (array indices:…",1,null],[12,"min_uptake","","Minimal vaccine uptake (as a fraction, used to interpolate) ",1,null],[12,"max_uptake","","Maximal vaccine uptake (as a fraction, used to interpolate) ",1,null],[12,"phase","","Phase of the vaccination programe that this age group will…",1,null],[3,"Solver","","Runge-Kutta 4 solver and PD control system for the model.",null,null],[12,"model","","Model parameters",2,null],[12,"dt","","Step size for the RK4 solver",2,null],[12,"t0","","Initial time (t0=0 indicates the start of the vaccination…",2,null],[12,"initials","","Initial values for the system state (all compartments)",2,null],[12,"Rt_initial","","Initial $R_t$ value",2,null],[12,"time","","Result vector for the times $t$",2,null],[12,"H","","Result vector for the H helper variable",2,null],[12,"Rt","","Result vector for the raw $R_t$ used in the dif. eqs. (not…",2,null],[12,"states","","Result vector for the system states (compartments)",2,null],[12,"N","","Result vector for the total daily infections (not age…",2,null],[12,"N_obs","","Result vector for the total daily infections (not age…",2,null],[12,"index","","Current index (where we are in the result vectors)",2,null],[3,"AgeGroupStateVector","","Used to store all the information on the state of one age…",null,null],[12,"S","","Array of the susceptible people (array entries:…",3,null],[12,"V","","Array of the vaccinated, but not yet immunized people…",3,null],[12,"E","","Array of the exposed people (array entries: unvaccinated,…",3,null],[12,"I","","Array of the infectious people (array entries:…",3,null],[12,"ICU","","Array of the infected people in ICU (array entries:…",3,null],[12,"D","","Cumulative deaths ",3,null],[12,"R","","Array of the susceptible people (array entries:…",3,null],[11,"gamma_bar","","Adds recovery-, ICU- and fatality-rates in the I…",1,[[]]],[11,"uptake","","Linearily interpolates the uptake between the minimal and…",1,[[]]],[11,"I_eff","","Sums up all I compartments of all age groups and…",0,[[["vec",3]]]],[11,"slopes","","Implements the dif. eqs. and returns a vector of all…",0,[[["vec",3]]]],[11,"add_age_group","","Add an age group to the model. Adds also this age groups…",0,[[["agegroup",3]]]],[11,"prepare_vaccination_rates","","Prepares the weekly vaccination rates per age group (to…",0,[[]]],[11,"vaccinated_between","","Returns how many first and second dose vaccines are…",0,[[]]],[11,"N","","Calculate the total daily new infections for a given…",0,[[["vec",3]]]],[11,"ICU_occupancy","","Calculate the ICU occupancy for a given system state (Adds…",0,[[["vec",3]]]],[11,"initialize","","Prepares the vaccination status dependend transition rates…",0,[[]]],[11,"raw_Rt_to_TTI_corrected","","Corrects the raw $R_t$ value used in the dif. eqs. by…",0,[[]]],[11,"raw_Rt_from_TTI_corrected","","Calculates the raw $R_t$ value used in the dif. eqs. from…",0,[[]]],[11,"initialize","","Initializes the solver. Clears all result arrays and…",2,[[]]],[11,"controlled_run","","Runs the simulation for a timespan T. Recieves a series of…",2,[[]]],[11,"run_rk4","","Solves the system of delay diff. eqs. for a timespan T…",2,[[["vec",3],["vec",3],["vec",3],["vec",3]]]],[11,"write_to_disk","","Writes the results to a folder \\\"./data/foldername/\\\". To…",2,[[],["result",6]]],[11,"create_initial","","Creates an initial AgeGroupStateVector for the initial…",3,[[],["agegroupstatevector",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",3,[[],["agegroupstatevector",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"add","","",3,[[["agegroupstatevector",3]]]],[11,"mul","","",3,[[]]]],"p":[[3,"Model"],[3,"AgeGroup"],[3,"Solver"],[3,"AgeGroupStateVector"]]},\
"covid19_vaccine_model_priesemann":{"doc":"","i":[[5,"main","covid19_vaccine_model_priesemann","",null,[[]]],[0,"vaccination_model","","",null,null],[0,"model","covid19_vaccine_model_priesemann::vaccination_model","Everything related to the model. Including collections of…",null,null],[3,"AgeGroup","covid19_vaccine_model_priesemann::vaccination_model::model","A collection of all the parameters for a given age group",null,null],[12,"name","","Name of the age group (will be used as the name of the…",0,null],[12,"M","","Age group population size ($M_i$ in the manuscript)",0,null],[12,"influx","","Daily influx ($\\\\phi_i$ in the manuscript)",0,null],[12,"rho","","E-to-I rate $\\\\rho$ (~1/latent period)",0,null],[12,"gamma_I","","Recovery rates in the I compartment (array indices:…",0,null],[12,"gamma_ICU","","Recovery rates in the ICU compartment (array indices:…",0,null],[12,"alpha","","I-to-ICU rate (array indices: vaccination status,…",0,null],[12,"delta_I","","Fatality rates in the I compartment (array indices:…",0,null],[12,"delta_ICU","","Fatality rates in the ICU compartment (array indices:…",0,null],[12,"min_uptake","","Minimal vaccine uptake (as a fraction, used to interpolate) ",0,null],[12,"max_uptake","","Maximal vaccine uptake (as a fraction, used to interpolate) ",0,null],[12,"phase","","Phase of the vaccination programe that this age group will…",0,null],[3,"Model","","A collection of global parameters (especially the…",null,null],[12,"age_groups","","A vector of all the age groups",1,null],[12,"M","","Total population size",1,null],[12,"eta0","","~Infection blocking potential of the vaccine ($\\\\eta_0$ in…",1,null],[12,"kappa0","","~Vaccine efficacy against severe infections ($\\\\kappa_0$ in…",1,null],[12,"tau","","Time between vaccination and developed immunization (time…",1,null],[12,"tau_vacc","","Time between two vaccination doses",1,null],[12,"vaccinations_per_week_dose1","","In week j, age group i gets…",1,null],[12,"vaccinations_per_week_dose2","","In week j, age group i gets…",1,null],[12,"random_vacc","","Fraction of vaccines to distribute randomly across the…",1,null],[12,"N_TTI","","Limit of daily infections above which the tracing of…",1,null],[12,"N_test_eff","","Limit of daily infections above which effective testing…",1,null],[12,"N_test_ineff","","Limit of daily infections above which ineffective testing…",1,null],[12,"N_no_test","","Limit of daily infections above which essentially no…",1,null],[11,"gamma_bar","","Adds recovery-, ICU- and fatality-rates in the I…",0,[[]]],[11,"uptake","","Linearily interpolates the uptake between the minimal and…",0,[[]]],[11,"I_eff","","Sums up all I compartments of all age groups and…",1,[[["vec",3]]]],[11,"slopes","","Implements the dif. eqs. and returns a vector of all…",1,[[["vec",3]]]],[11,"add_age_group","","Add an age group to the model. Adds also this age groups…",1,[[["agegroup",3]]]],[11,"vaccine_supplies_per_week","","Returns the vaccine supplies $w^T(week)$ for a given week…",1,[[]]],[11,"total_vaccination_rates_per_week","","Returns the total doses of vaccination given in a week,…",1,[[]]],[11,"s_for_given_total_uptake","","Find the linear interpolation parameter s parametrising…",1,[[]]],[11,"prepare_vaccination_rates","","Prepares the weekly vaccination rates per age group (to…",1,[[]]],[11,"vaccinated_between","","Returns how many first and second dose vaccines are…",1,[[]]],[11,"N","","Calculate the total daily new infections for a given…",1,[[["vec",3]]]],[11,"ICU_occupancy","","Calculate the ICU occupancy for a given system state (Adds…",1,[[["vec",3]]]],[11,"initialize","","Prepares the vaccination status dependend transition rates…",1,[[]]],[11,"raw_Rt_to_TTI_corrected","","Corrects the raw $R_t$ value used in the dif. eqs. by…",1,[[]]],[11,"raw_Rt_from_TTI_corrected","","Calculates the raw $R_t$ value used in the dif. eqs. from…",1,[[]]],[0,"solver","covid19_vaccine_model_priesemann::vaccination_model","Runge-Kutta 4 solver and PD control system for the model.",null,null],[3,"Solver","covid19_vaccine_model_priesemann::vaccination_model::solver","Runge-Kutta 4 solver and PD control system for the model.",null,null],[12,"model","","Model parameters",2,null],[12,"dt","","Step size for the RK4 solver",2,null],[12,"t0","","Initial time (t0=0 indicates the start of the vaccination…",2,null],[12,"initials","","Initial values for the system state (all compartments)",2,null],[12,"Rt_initial","","Initial $R_t$ value",2,null],[12,"time","","Result vector for the times $t$",2,null],[12,"H","","Result vector for the H helper variable",2,null],[12,"Rt","","Result vector for the raw $R_t$ used in the dif. eqs. (not…",2,null],[12,"states","","Result vector for the system states (compartments)",2,null],[12,"N","","Result vector for the total daily infections (not age…",2,null],[12,"N_obs","","Result vector for the total daily infections (not age…",2,null],[12,"index","","Current index (where we are in the result vectors)",2,null],[5,"locate_position","","Locates the largest non-negative integer i with x[i] <=…",null,[[["vec",3]]]],[11,"initialize","","Initializes the solver. Clears all result arrays and…",2,[[]]],[11,"controlled_run","","Runs the simulation for a timespan T. Recieves a series of…",2,[[]]],[11,"run_rk4","","Solves the system of delay diff. eqs. for a timespan T…",2,[[["vec",3],["vec",3],["vec",3],["vec",3]]]],[11,"write_to_disk","","Writes the results to a folder \\\"./data/foldername/\\\". To…",2,[[],["result",6]]],[0,"age_group_state_vector","covid19_vaccine_model_priesemann::vaccination_model","Everything needed to store the state of the system.",null,null],[3,"AgeGroupStateVector","covid19_vaccine_model_priesemann::vaccination_model::age_group_state_vector","Used to store all the information on the state of one age…",null,null],[12,"S","","Array of the susceptible people (array entries:…",3,null],[12,"V","","Array of the vaccinated, but not yet immunized people…",3,null],[12,"E","","Array of the exposed people (array entries: unvaccinated,…",3,null],[12,"I","","Array of the infectious people (array entries:…",3,null],[12,"ICU","","Array of the infected people in ICU (array entries:…",3,null],[12,"D","","Cumulative deaths ",3,null],[12,"R","","Array of the susceptible people (array entries:…",3,null],[5,"add_vec","","Adds two vectors of AgeGroupStateVector\'s.",null,[[["vec",3],["agegroupstatevector",3],["vec",3]],[["vec",3],["agegroupstatevector",3]]]],[5,"mul_vec","","Multiplies a vectors of AgeGroupStateVector\'s by a scalar…",null,[[["vec",3]],[["vec",3],["agegroupstatevector",3]]]],[11,"create_initial","","Creates an initial AgeGroupStateVector for the initial…",3,[[],["agegroupstatevector",3]]],[11,"from","covid19_vaccine_model_priesemann::vaccination_model::model","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","covid19_vaccine_model_priesemann::vaccination_model::solver","",2,[[]]],[11,"into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","covid19_vaccine_model_priesemann::vaccination_model::age_group_state_vector","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"clone","","",3,[[],["agegroupstatevector",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"add","","",3,[[["agegroupstatevector",3]]]],[11,"mul","","",3,[[]]]],"p":[[3,"AgeGroup"],[3,"Model"],[3,"Solver"],[3,"AgeGroupStateVector"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);